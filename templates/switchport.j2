#jinja2: trim_blocks: False
#jinja2: lstrip_blocks: False

{% set state = item.state|default(default_switchport_state) %}

{% if state == 'absent' %}
interface {{ item.name }}
   no switchport
 {# If we find existing switchport config, then default settings #}
 {# These default commands only run the first time absent is called #}
 {% set switchport_block = base_config | config_block('interface ' ~ item.name, indent=3) %}
   {% if switchport_block %}
    {% if switchport_block | join('\n') | re_search('^switchport$') %}
   default switchport mode
   default switchport trunk group
   default switchport trunk native vlan
   default switchport trunk allowed vlan
   default switchport access vlan
    {% endif %}
   {% endif %}

{% elif state == 'present' %}
interface {{ item.name }}
   switchport
   switchport mode {{ item.mode|default('access')}}
 {% if item.mode == 'trunk' %}
  {% if 'trunk_allowed_vlans' in item %}
   {% for vlan in item.trunk_allowed_vlans %}
   switchport trunk allowed vlan {{ vlan }}
   {% endfor %}
  {% endif %}
  {% if 'trunk_groups' in item %}
   {% for group in item.trunk_groups %}
   switchport trunk group {{ group }}
   {% endfor %}

   {# Determine which trunk groups need to be removed #}
   {% if eos_purge_switchport_trunk_groups %}
    {% set switchport_block = base_config | config_block('interface ' ~ item.name, indent=3) %}
    {% if switchport_block %}
     {% set current = switchport_block | join('\n') | re_findall('^switchport trunk group (\S+)') %}
     {% set to_remove = current | symmetric_difference(item.trunk_groups) %}

     {% for group in to_remove %}
    no switchport trunk group {{ group }}
     {% endfor %}
    {% endif %}
   {% endif %}


  {% endif %}
  {% if 'trunk_native_vlan' in item %}
   switchport trunk native vlan {{ item.trunk_native_vlan }}
  {% endif %}
 {% endif %}

 {% if item.mode|default('access') == 'access' and item.access_vlan %}
   switchport access vlan {{ item.access_vlan }}
 {% endif %}
{% endif %}
